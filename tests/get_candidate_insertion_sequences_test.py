import argparse, os
import unittest
from unittest.mock import patch, call, ANY

from bin.get_candidate_insertion_sequences import *

class TestGetCandidateInsertionSequences(unittest.TestCase):
    TEST_SAM_FILE = 'tests/data/input/test.sam.mapped.sorted'
    TEST_CONTIG_FASTA = 'tests/data/input/test_assemblies_filtered.fasta'
    TEST_OUTPUT_PREFIX = 'tests/data/output/test'
    TEST_OUTPUT_PREFIX_MAIN = 'tests/data/output/test2'
    TEST_OUTPUT_PREFIX_MAIN2 = 'tests/data/output/test3'

    def test_check_itrs(self):

        actual = check_itrs('NODE_1_length_49561_cov_5.4235', [[(550,570),(580,600)], [(10,30),(0,20)]], 300, 5000)
        self.maxDiff = None
        self.assertEqual(actual, [(10, 570), (0, 570), (10, 600), (0, 600)])

    def test_get_candidate_itrs(self):

        actual = get_candidate_itrs(self.TEST_SAM_FILE)

        self.assertEqual(actual, [('NODE_8989_length_2621_cov_163.784', 'AACGCCGTACTGGTTTAAAGTTAATCCACTATA'),
('NODE_8989_length_2621_cov_163.784', 'AAGGCGAGGCAACGCCGTACTGGTTTAAA'),
('NODE_8989_length_2621_cov_163.784', 'ACAAGGCGACGAAGCCGCAGACAGTACA'),
('NODE_8989_length_2621_cov_163.784', 'AGGCAACGCCGTACTGGTTTAAAGTTAATCCACTATA'),
('NODE_8989_length_2621_cov_163.784', 'TATAGTGGATTAACTTTAAACCAGTACGGCGTT'),
('NODE_8989_length_2621_cov_163.784', 'TATAGTGGATTAACTTTAAACCAGTACGGCGTTGCCT'),
('NODE_8989_length_2621_cov_163.784', 'TGTACTGTCTGCGGCTTCGTCGCCTTGT'),
('NODE_8989_length_2621_cov_163.784', 'TTTAAACCAGTACGGCGTTGCCTCGCCTT')]
        )

    def test_process_sam_file(self):

        irs = get_candidate_itrs(self.TEST_SAM_FILE)
        actual = process_sam_file(self.TEST_SAM_FILE, irs)

        self.maxDiff = None
        self.assertEqual(actual, {'NODE_8989_length_2621_cov_163.784': {'AACGCCGTACTGGTTTAAAGTTAATCCACTATA': [[(1891,
                                                                               1923)],
                                                                             [(2589,
                                                                               2621)]],
                                       'AAGGCGAGGCAACGCCGTACTGGTTTAAA': [[(1881,
                                                                           1909)],
                                                                         [(200,
                                                                           228),
                                                                          (2603,
                                                                           2631)]],
                                       'ACAAGGCGACGAAGCCGCAGACAGTACA': [[(1792,
                                                                          1819)],
                                                                        [(240,
                                                                          267)]],
                                       'AGGCAACGCCGTACTGGTTTAAAGTTAATCCACTATA': [[(1887,
                                                                                   1923)],
                                                                                 [(2589,
                                                                                   2625)]]}}
        )

    def test_write_insertion_sequence_info(self):

        mapping_info = {
'NODE_1_length_49561_cov_5.4235': {'seq1': [[(10, 30),(1,20)], [(550,570),(580,600)]]}}

        actual = write_insertion_sequences_info(mapping_info, self.TEST_OUTPUT_PREFIX, 500, 3000)

        self.maxDiff = None
        self.assertEqual(actual, {'NODE_1_length_49561_cov_5.4235': [[10,
                                     570,
                                     'NODE_1_length_49561_cov_5.4235_1'],
                                    [10,
                                     600,
                                     'NODE_1_length_49561_cov_5.4235_2'],
                                    [1,
                                     570,
                                     'NODE_1_length_49561_cov_5.4235_3'],
                                    [1,
                                     600,
                                     'NODE_1_length_49561_cov_5.4235_4']]}
        )

        txt = open(f'{self.TEST_OUTPUT_PREFIX}_candidate_insertion_sequences_info.txt', "r")
        content = "".join(txt.readlines())
        #os.remove(f'{self.TEST_OUTPUT_PREFIX}_candidate_insertion_sequences_info.txt')
        self.assertEqual(content,"""sample_id	contig	itr1_start	itr2_end
tests/data/output/test	NODE_1_length_49561_cov_5.4235_1	10	570
tests/data/output/test	NODE_1_length_49561_cov_5.4235_2	10	600
tests/data/output/test	NODE_1_length_49561_cov_5.4235_3	1	570
tests/data/output/test	NODE_1_length_49561_cov_5.4235_4	1	600
""")

    def test_write_insertion_sequence_fasta(self):

        contig_is_info = {'NODE_1_length_49561_cov_5.4235': [[10,
                                     570,
                                     'NODE_1_length_49561_cov_5.4235_1'],
                                    [10,
                                     600,
                                     'NODE_1_length_49561_cov_5.4235_2'],
                                    [1,
                                     570,
                                     'NODE_1_length_49561_cov_5.4235_3'],
                                    [1,
                                     600,
                                     'NODE_1_length_49561_cov_5.4235_4']]}

        write_insertion_sequences_fasta(contig_is_info, self.TEST_CONTIG_FASTA, self.TEST_OUTPUT_PREFIX)

        self.maxDiff = None
        fasta = open(f'{self.TEST_OUTPUT_PREFIX}_candidate_insertion_sequences.fasta', "r")
        content = "".join(fasta.readlines())
        #os.remove(f'{self.TEST_OUTPUT_PREFIX}_candidate_insertion_sequences.fasta')
        self.assertEqual(content,""">NODE_1_length_49561_cov_5.4235_1
GTACGGTCTAGGAAGCACCTTTACCCTTGTTCTCAATCTCTCTGGTAGTGAAAATAAAGCTTGTAAGTGTCTAGTGTTTTGAGGTAAATAGAAAATATTGAGCTAACGGAAAATTCCGTTAGTTCTTTTTTGTATTTTAGGAGAAAAAATGTCAGATAATATTGAAATTGTTATGGATATTGATTCGTTAGAAATTTTCGATGTAATAGATCTTGATAAGAATGAAAATATGGTTGATTGTATCCCTGAAGGAAATTCTGAAGAAAAGGTATCTCCATACGATGACCTCAATAGGGTTTGGCTTAGAAACGGGTATTATTATAAGCCGTCTAGTCTACTTTGGGAAGTTATTAAAGATAATGTTATTCATGAATTGTATCCTAGAAATAAACATGGCAAATATCCTTACTACAGAAGAGCAAGAGACGGAACATGGGGACAATCTAGCCAATTGACTCAGGATGAAGACTTGTGGTTGACTCTAGAGTTTAATCCAGAATTGATGGGGTATGTGTAGGAAGGAGTAAAGAATGGAAACTGGAATTTGTATACGATGTGCTT
>NODE_1_length_49561_cov_5.4235_2
GTACGGTCTAGGAAGCACCTTTACCCTTGTTCTCAATCTCTCTGGTAGTGAAAATAAAGCTTGTAAGTGTCTAGTGTTTTGAGGTAAATAGAAAATATTGAGCTAACGGAAAATTCCGTTAGTTCTTTTTTGTATTTTAGGAGAAAAAATGTCAGATAATATTGAAATTGTTATGGATATTGATTCGTTAGAAATTTTCGATGTAATAGATCTTGATAAGAATGAAAATATGGTTGATTGTATCCCTGAAGGAAATTCTGAAGAAAAGGTATCTCCATACGATGACCTCAATAGGGTTTGGCTTAGAAACGGGTATTATTATAAGCCGTCTAGTCTACTTTGGGAAGTTATTAAAGATAATGTTATTCATGAATTGTATCCTAGAAATAAACATGGCAAATATCCTTACTACAGAAGAGCAAGAGACGGAACATGGGGACAATCTAGCCAATTGACTCAGGATGAAGACTTGTGGTTGACTCTAGAGTTTAATCCAGAATTGATGGGGTATGTGTAGGAAGGAGTAAAGAATGGAAACTGGAATTTGTATACGATGTGCTTTCAACTGGGTTACACCTTGCATCAATGAAA
>NODE_1_length_49561_cov_5.4235_3
CAGCAGCCAGTACGGTCTAGGAAGCACCTTTACCCTTGTTCTCAATCTCTCTGGTAGTGAAAATAAAGCTTGTAAGTGTCTAGTGTTTTGAGGTAAATAGAAAATATTGAGCTAACGGAAAATTCCGTTAGTTCTTTTTTGTATTTTAGGAGAAAAAATGTCAGATAATATTGAAATTGTTATGGATATTGATTCGTTAGAAATTTTCGATGTAATAGATCTTGATAAGAATGAAAATATGGTTGATTGTATCCCTGAAGGAAATTCTGAAGAAAAGGTATCTCCATACGATGACCTCAATAGGGTTTGGCTTAGAAACGGGTATTATTATAAGCCGTCTAGTCTACTTTGGGAAGTTATTAAAGATAATGTTATTCATGAATTGTATCCTAGAAATAAACATGGCAAATATCCTTACTACAGAAGAGCAAGAGACGGAACATGGGGACAATCTAGCCAATTGACTCAGGATGAAGACTTGTGGTTGACTCTAGAGTTTAATCCAGAATTGATGGGGTATGTGTAGGAAGGAGTAAAGAATGGAAACTGGAATTTGTATACGATGTGCTT
>NODE_1_length_49561_cov_5.4235_4
CAGCAGCCAGTACGGTCTAGGAAGCACCTTTACCCTTGTTCTCAATCTCTCTGGTAGTGAAAATAAAGCTTGTAAGTGTCTAGTGTTTTGAGGTAAATAGAAAATATTGAGCTAACGGAAAATTCCGTTAGTTCTTTTTTGTATTTTAGGAGAAAAAATGTCAGATAATATTGAAATTGTTATGGATATTGATTCGTTAGAAATTTTCGATGTAATAGATCTTGATAAGAATGAAAATATGGTTGATTGTATCCCTGAAGGAAATTCTGAAGAAAAGGTATCTCCATACGATGACCTCAATAGGGTTTGGCTTAGAAACGGGTATTATTATAAGCCGTCTAGTCTACTTTGGGAAGTTATTAAAGATAATGTTATTCATGAATTGTATCCTAGAAATAAACATGGCAAATATCCTTACTACAGAAGAGCAAGAGACGGAACATGGGGACAATCTAGCCAATTGACTCAGGATGAAGACTTGTGGTTGACTCTAGAGTTTAATCCAGAATTGATGGGGTATGTGTAGGAAGGAGTAAAGAATGGAAACTGGAATTTGTATACGATGTGCTTTCAACTGGGTTACACCTTGCATCAATGAAA
""")

    def test_arguments(self):
        actual = get_arguments().parse_args(
            ['--contig_fasta', 'contig_fasta', '--sam_file', 'sam_file', '--min_is_len', '500', '--max_is_len', '3000', '--output_prefix', 'output_prefix'])
        self.assertEqual(actual, argparse.Namespace(contig_fasta='contig_fasta', sam_file='sam_file', min_is_len=500, max_is_len=3000, output_prefix='output_prefix'))

    def test_main(self):
        args = get_arguments().parse_args(
            ['--contig_fasta', self.TEST_CONTIG_FASTA, '--sam_file', self.TEST_SAM_FILE, '--output_prefix', self.TEST_OUTPUT_PREFIX_MAIN])

        main(args)

        self.maxDiff = None
        txt = open(f'{self.TEST_OUTPUT_PREFIX_MAIN}_candidate_insertion_sequences_info.txt', "r")
        content = "".join(txt.readlines())
        os.remove(f'{self.TEST_OUTPUT_PREFIX_MAIN}_candidate_insertion_sequences_info.txt')
        self.assertEqual(content,"""sample_id	contig	itr1_start	itr2_end
tests/data/output/test2	NODE_8989_length_2621_cov_163.784_1	200	1909
tests/data/output/test2	NODE_8989_length_2621_cov_163.784_2	1881	2631
tests/data/output/test2	NODE_8989_length_2621_cov_163.784_3	240	1819
tests/data/output/test2	NODE_8989_length_2621_cov_163.784_4	1887	2625
tests/data/output/test2	NODE_8989_length_2621_cov_163.784_5	1891	2621
""")

        fasta = open(f'{self.TEST_OUTPUT_PREFIX_MAIN}_candidate_insertion_sequences.fasta', "r")
        content = "".join(fasta.readlines())
        os.remove(f'{self.TEST_OUTPUT_PREFIX_MAIN}_candidate_insertion_sequences.fasta')
        self.assertEqual(content,""">NODE_8989_length_2621_cov_163.784_1
CGTACCTGAAGTCGTAGTAGAATCTCAACAAGATGGTGTACGTGATTTAGAAGAACTGGATAAGAATCGTACGTACAATAATACTTACGATCGCTTGTCTCAAGATGAAGTCTTTAAACATGTTTCTACTACTGCACAAATGTGTTTGTCTGGTATTATTGACTATGTGGCTAAAATGAAACAATTCAATGGCCACATCTTAACATTGATGGGTGACAAGAACTTTGTAGTGAATGAAGGCCCTGCTATGCAAGTCGGTCTTTACTACAACATCATGGACATCATTACCAAAACGGATTCTGCTTCTTTCCGTTACTCCATGGACTTCTTGTTGCAATTGATGTGTGATGAACCTGAAGTATTGGGATTCTTGAATCTTTCTCGTTTCCAAGAAAACTTAGTATTGGATCCTGTATCTTTGCGTTGCTATTCTAACCTGATGAACATGTTGACTTCTTTGAAAGATCCGATGACTCGTCAGAAGAACCTTCGTACTTCTATTGACATGACTAAAGCTTTGGAATATGGTTTCTCTGAAGGTGCTAAAACTCGCCTTTTGAACTACTTCCACAATTAATTTAGTCTATCTCTACTCTCTACCTTTAAATTAGGTAGAGAGTAGTGACTGGTATTATTTTATCTTTAAATAGATAAGGGATAAACAAATGAAAGCTGAAAACTGGAAACAGATTTTATCTGCTGCAGGTTGTTCGATTAATGTAGCTACTGAATGGGCACCTTACTTTGCTAAATACGCTGAAGAGTATAAGGTTAATACCATTAATCGTGTAGCGGCATTTATGGCGAATGTAATGATTGAATCCAATTACCTGCGTGTATTGAAAGAAAACTTAAACTACTCAGCACAAGGCTTGGCTCGCACTTGGCCTAAACGCTATGCTAATCCTAATGGCACTCCTAATGCTAAAGCTTTGGCTATTGCTAAGAATCCTCGTGCGATTGCTAACCATTGCTATGCAAACCGTATGGGTAATGGTCCTGAGTCTAGTGATGATGGTTGGAACTATTCCGGTAAAGGTCCTATCCAAGTAACAGGTAAGGATAACTACATGGAATTCTTCCGTTCTCGTAACATGTTGCCTTCTACTTCACCTCATCTTCTTTTAGAGAAAGACTTAGGTACTGCTGCTGCATTCTGGTTCTGGTCTAAGAATGGTATTAATGCTTATGCGGATAAAGGCGATATCGATGGATGCTGTGATAAAGTGAACATTGGTCACAAAACCACTCGTGTAGGTGATGCTCATGGTTTCACTGCTCGTAAAGCCATCTACGATAAACTGAGAGTATTCTTGAATCGTAATCCTGATCTACTGAAAGGTAAAGATGTACAAGTCATTCCTCAAGAAGTCATGAATGACGTGATTCCACCTGAGATTACTTTCTACGAACAAGATCCAGAATCTCGTGATCAAGTAGAGTTTGTACAGGATGTGAAGTTTATTTAATACCAAAACTATAAAAAGAGGTTAAATGGATAAAACCTTAAAACAGAAATTTGCGATTGTAGTACTGATTTATTTCTTTATGTTCATTGCATCCATGATCGTGAATGTGTTGACCATTACTTTCTCTCCTCTGATTGTTTGGTTCTCCATGCGTGATAACTACCAAGGAAAGATACCTGTTATCTTTAAATGGTTCTTAACGCATGACAATCCAATCGACGGAGATGAAGACCATTTGAAA
>NODE_8989_length_2621_cov_163.784_2
CAATCGACGGAGATGAAGACCATTTGAAACGACATCCTAATGAAGACTACTGGTCTATCTTTATTAGACGAGTATTCTGGATTTGTCGTAACAAAGGTTATACATTCGATTACGATGTATGTGGGACTACCTTACATGGACCTATTAAAATGTTTGGTAATCCTTATGCATCAGATCAATACGAAGCAGGACAACTCTTTCAAGTCGCTTCTAATGGTATCTTTGAATACTACTTAGTATACCGATATCCTTTCTTAAAGTCTCGTTGCTTACGTATTCGATTAGGTTGGAAGTTTAACCAAGACTTAGTCGATACAGATAAGAAAGTGATGTTAGCGACTTCTATTGGTTTATTTAAAACATTCACTGGACAGGATTAAATCCATCATGAAGATTCTTTCTTATATTCGCTTTACTGAAATGAATGAAACGATACAATGGTTAGAAAAACATAATGTCTTTTATGCACCTTGTAATCTAAGAGAAAGTATCTTTGTTGATACCATTTCAGGAGAGATTGAAGTCGTACCCTCTGATTACTTAGTCATGATAGATCAATCTGATCTACCAGATGTGTATGCAGAAAGTGCTTTCTTACAAATCGATCCTGAATGTTTTGTAGACTATTCTTAATCTATATTCTCTACTCCTCCCTTAAATAGGAGGAGTGAGGGATTTATGTCGTCTTTTAAAATTACTGAAACCTATACTATTTAAGTGGCTTTACCTAAGCGTAAGGTAATCCTATTTA
>NODE_8989_length_2621_cov_163.784_3
CGTGATTTAGAAGAACTGGATAAGAATCGTACGTACAATAATACTTACGATCGCTTGTCTCAAGATGAAGTCTTTAAACATGTTTCTACTACTGCACAAATGTGTTTGTCTGGTATTATTGACTATGTGGCTAAAATGAAACAATTCAATGGCCACATCTTAACATTGATGGGTGACAAGAACTTTGTAGTGAATGAAGGCCCTGCTATGCAAGTCGGTCTTTACTACAACATCATGGACATCATTACCAAAACGGATTCTGCTTCTTTCCGTTACTCCATGGACTTCTTGTTGCAATTGATGTGTGATGAACCTGAAGTATTGGGATTCTTGAATCTTTCTCGTTTCCAAGAAAACTTAGTATTGGATCCTGTATCTTTGCGTTGCTATTCTAACCTGATGAACATGTTGACTTCTTTGAAAGATCCGATGACTCGTCAGAAGAACCTTCGTACTTCTATTGACATGACTAAAGCTTTGGAATATGGTTTCTCTGAAGGTGCTAAAACTCGCCTTTTGAACTACTTCCACAATTAATTTAGTCTATCTCTACTCTCTACCTTTAAATTAGGTAGAGAGTAGTGACTGGTATTATTTTATCTTTAAATAGATAAGGGATAAACAAATGAAAGCTGAAAACTGGAAACAGATTTTATCTGCTGCAGGTTGTTCGATTAATGTAGCTACTGAATGGGCACCTTACTTTGCTAAATACGCTGAAGAGTATAAGGTTAATACCATTAATCGTGTAGCGGCATTTATGGCGAATGTAATGATTGAATCCAATTACCTGCGTGTATTGAAAGAAAACTTAAACTACTCAGCACAAGGCTTGGCTCGCACTTGGCCTAAACGCTATGCTAATCCTAATGGCACTCCTAATGCTAAAGCTTTGGCTATTGCTAAGAATCCTCGTGCGATTGCTAACCATTGCTATGCAAACCGTATGGGTAATGGTCCTGAGTCTAGTGATGATGGTTGGAACTATTCCGGTAAAGGTCCTATCCAAGTAACAGGTAAGGATAACTACATGGAATTCTTCCGTTCTCGTAACATGTTGCCTTCTACTTCACCTCATCTTCTTTTAGAGAAAGACTTAGGTACTGCTGCTGCATTCTGGTTCTGGTCTAAGAATGGTATTAATGCTTATGCGGATAAAGGCGATATCGATGGATGCTGTGATAAAGTGAACATTGGTCACAAAACCACTCGTGTAGGTGATGCTCATGGTTTCACTGCTCGTAAAGCCATCTACGATAAACTGAGAGTATTCTTGAATCGTAATCCTGATCTACTGAAAGGTAAAGATGTACAAGTCATTCCTCAAGAAGTCATGAATGACGTGATTCCACCTGAGATTACTTTCTACGAACAAGATCCAGAATCTCGTGATCAAGTAGAGTTTGTACAGGATGTGAAGTTTATTTAATACCAAAACTATAAAAAGAGGTTAAATGGATAAAACCTTAAAACAGAAATTTGCGATTGTAGTACTGATTTATTTCTTTATGTTCATTGCATCCATGATCGTGAATGTGTTGACCATTACTTTCTCTCCTCTGATTGTTTGGTTCTCCATG
>NODE_8989_length_2621_cov_163.784_4
ACGGAGATGAAGACCATTTGAAACGACATCCTAATGAAGACTACTGGTCTATCTTTATTAGACGAGTATTCTGGATTTGTCGTAACAAAGGTTATACATTCGATTACGATGTATGTGGGACTACCTTACATGGACCTATTAAAATGTTTGGTAATCCTTATGCATCAGATCAATACGAAGCAGGACAACTCTTTCAAGTCGCTTCTAATGGTATCTTTGAATACTACTTAGTATACCGATATCCTTTCTTAAAGTCTCGTTGCTTACGTATTCGATTAGGTTGGAAGTTTAACCAAGACTTAGTCGATACAGATAAGAAAGTGATGTTAGCGACTTCTATTGGTTTATTTAAAACATTCACTGGACAGGATTAAATCCATCATGAAGATTCTTTCTTATATTCGCTTTACTGAAATGAATGAAACGATACAATGGTTAGAAAAACATAATGTCTTTTATGCACCTTGTAATCTAAGAGAAAGTATCTTTGTTGATACCATTTCAGGAGAGATTGAAGTCGTACCCTCTGATTACTTAGTCATGATAGATCAATCTGATCTACCAGATGTGTATGCAGAAAGTGCTTTCTTACAAATCGATCCTGAATGTTTTGTAGACTATTCTTAATCTATATTCTCTACTCCTCCCTTAAATAGGAGGAGTGAGGGATTTATGTCGTCTTTTAAAATTACTGAAACCTATACTATTTAAGTGGCTTTACCTAAGCGTAAGGTAATCC
>NODE_8989_length_2621_cov_163.784_5
AGATGAAGACCATTTGAAACGACATCCTAATGAAGACTACTGGTCTATCTTTATTAGACGAGTATTCTGGATTTGTCGTAACAAAGGTTATACATTCGATTACGATGTATGTGGGACTACCTTACATGGACCTATTAAAATGTTTGGTAATCCTTATGCATCAGATCAATACGAAGCAGGACAACTCTTTCAAGTCGCTTCTAATGGTATCTTTGAATACTACTTAGTATACCGATATCCTTTCTTAAAGTCTCGTTGCTTACGTATTCGATTAGGTTGGAAGTTTAACCAAGACTTAGTCGATACAGATAAGAAAGTGATGTTAGCGACTTCTATTGGTTTATTTAAAACATTCACTGGACAGGATTAAATCCATCATGAAGATTCTTTCTTATATTCGCTTTACTGAAATGAATGAAACGATACAATGGTTAGAAAAACATAATGTCTTTTATGCACCTTGTAATCTAAGAGAAAGTATCTTTGTTGATACCATTTCAGGAGAGATTGAAGTCGTACCCTCTGATTACTTAGTCATGATAGATCAATCTGATCTACCAGATGTGTATGCAGAAAGTGCTTTCTTACAAATCGATCCTGAATGTTTTGTAGACTATTCTTAATCTATATTCTCTACTCCTCCCTTAAATAGGAGGAGTGAGGGATTTATGTCGTCTTTTAAAATTACTGAAACCTATACTATTTAAGTGGCTTTACCTAAGCGTAAGGTA
""")


    def test_main_diff_min_max_length(self):
        args = get_arguments().parse_args(
            ['--contig_fasta', self.TEST_CONTIG_FASTA, '--sam_file', self.TEST_SAM_FILE, '--min_is_len', '1500', '--max_is_len', '3000', '--output_prefix', self.TEST_OUTPUT_PREFIX_MAIN2])

        main(args)

        txt = open(f'{self.TEST_OUTPUT_PREFIX_MAIN2}_candidate_insertion_sequences_info.txt', "r")
        content = "".join(txt.readlines())
        os.remove(f'{self.TEST_OUTPUT_PREFIX_MAIN2}_candidate_insertion_sequences_info.txt')
        self.assertEqual(content,"""sample_id	contig	itr1_start	itr2_end
tests/data/output/test3	NODE_8989_length_2621_cov_163.784_1	200	1909
tests/data/output/test3	NODE_8989_length_2621_cov_163.784_2	240	1819
""")

        fasta = open(f'{self.TEST_OUTPUT_PREFIX_MAIN2}_candidate_insertion_sequences.fasta', "r")
        content = "".join(fasta.readlines())
        os.remove(f'{self.TEST_OUTPUT_PREFIX_MAIN2}_candidate_insertion_sequences.fasta')
        self.maxDiff = None
        self.assertEqual(content,""">NODE_8989_length_2621_cov_163.784_1
CGTACCTGAAGTCGTAGTAGAATCTCAACAAGATGGTGTACGTGATTTAGAAGAACTGGATAAGAATCGTACGTACAATAATACTTACGATCGCTTGTCTCAAGATGAAGTCTTTAAACATGTTTCTACTACTGCACAAATGTGTTTGTCTGGTATTATTGACTATGTGGCTAAAATGAAACAATTCAATGGCCACATCTTAACATTGATGGGTGACAAGAACTTTGTAGTGAATGAAGGCCCTGCTATGCAAGTCGGTCTTTACTACAACATCATGGACATCATTACCAAAACGGATTCTGCTTCTTTCCGTTACTCCATGGACTTCTTGTTGCAATTGATGTGTGATGAACCTGAAGTATTGGGATTCTTGAATCTTTCTCGTTTCCAAGAAAACTTAGTATTGGATCCTGTATCTTTGCGTTGCTATTCTAACCTGATGAACATGTTGACTTCTTTGAAAGATCCGATGACTCGTCAGAAGAACCTTCGTACTTCTATTGACATGACTAAAGCTTTGGAATATGGTTTCTCTGAAGGTGCTAAAACTCGCCTTTTGAACTACTTCCACAATTAATTTAGTCTATCTCTACTCTCTACCTTTAAATTAGGTAGAGAGTAGTGACTGGTATTATTTTATCTTTAAATAGATAAGGGATAAACAAATGAAAGCTGAAAACTGGAAACAGATTTTATCTGCTGCAGGTTGTTCGATTAATGTAGCTACTGAATGGGCACCTTACTTTGCTAAATACGCTGAAGAGTATAAGGTTAATACCATTAATCGTGTAGCGGCATTTATGGCGAATGTAATGATTGAATCCAATTACCTGCGTGTATTGAAAGAAAACTTAAACTACTCAGCACAAGGCTTGGCTCGCACTTGGCCTAAACGCTATGCTAATCCTAATGGCACTCCTAATGCTAAAGCTTTGGCTATTGCTAAGAATCCTCGTGCGATTGCTAACCATTGCTATGCAAACCGTATGGGTAATGGTCCTGAGTCTAGTGATGATGGTTGGAACTATTCCGGTAAAGGTCCTATCCAAGTAACAGGTAAGGATAACTACATGGAATTCTTCCGTTCTCGTAACATGTTGCCTTCTACTTCACCTCATCTTCTTTTAGAGAAAGACTTAGGTACTGCTGCTGCATTCTGGTTCTGGTCTAAGAATGGTATTAATGCTTATGCGGATAAAGGCGATATCGATGGATGCTGTGATAAAGTGAACATTGGTCACAAAACCACTCGTGTAGGTGATGCTCATGGTTTCACTGCTCGTAAAGCCATCTACGATAAACTGAGAGTATTCTTGAATCGTAATCCTGATCTACTGAAAGGTAAAGATGTACAAGTCATTCCTCAAGAAGTCATGAATGACGTGATTCCACCTGAGATTACTTTCTACGAACAAGATCCAGAATCTCGTGATCAAGTAGAGTTTGTACAGGATGTGAAGTTTATTTAATACCAAAACTATAAAAAGAGGTTAAATGGATAAAACCTTAAAACAGAAATTTGCGATTGTAGTACTGATTTATTTCTTTATGTTCATTGCATCCATGATCGTGAATGTGTTGACCATTACTTTCTCTCCTCTGATTGTTTGGTTCTCCATGCGTGATAACTACCAAGGAAAGATACCTGTTATCTTTAAATGGTTCTTAACGCATGACAATCCAATCGACGGAGATGAAGACCATTTGAAA
>NODE_8989_length_2621_cov_163.784_2
CGTGATTTAGAAGAACTGGATAAGAATCGTACGTACAATAATACTTACGATCGCTTGTCTCAAGATGAAGTCTTTAAACATGTTTCTACTACTGCACAAATGTGTTTGTCTGGTATTATTGACTATGTGGCTAAAATGAAACAATTCAATGGCCACATCTTAACATTGATGGGTGACAAGAACTTTGTAGTGAATGAAGGCCCTGCTATGCAAGTCGGTCTTTACTACAACATCATGGACATCATTACCAAAACGGATTCTGCTTCTTTCCGTTACTCCATGGACTTCTTGTTGCAATTGATGTGTGATGAACCTGAAGTATTGGGATTCTTGAATCTTTCTCGTTTCCAAGAAAACTTAGTATTGGATCCTGTATCTTTGCGTTGCTATTCTAACCTGATGAACATGTTGACTTCTTTGAAAGATCCGATGACTCGTCAGAAGAACCTTCGTACTTCTATTGACATGACTAAAGCTTTGGAATATGGTTTCTCTGAAGGTGCTAAAACTCGCCTTTTGAACTACTTCCACAATTAATTTAGTCTATCTCTACTCTCTACCTTTAAATTAGGTAGAGAGTAGTGACTGGTATTATTTTATCTTTAAATAGATAAGGGATAAACAAATGAAAGCTGAAAACTGGAAACAGATTTTATCTGCTGCAGGTTGTTCGATTAATGTAGCTACTGAATGGGCACCTTACTTTGCTAAATACGCTGAAGAGTATAAGGTTAATACCATTAATCGTGTAGCGGCATTTATGGCGAATGTAATGATTGAATCCAATTACCTGCGTGTATTGAAAGAAAACTTAAACTACTCAGCACAAGGCTTGGCTCGCACTTGGCCTAAACGCTATGCTAATCCTAATGGCACTCCTAATGCTAAAGCTTTGGCTATTGCTAAGAATCCTCGTGCGATTGCTAACCATTGCTATGCAAACCGTATGGGTAATGGTCCTGAGTCTAGTGATGATGGTTGGAACTATTCCGGTAAAGGTCCTATCCAAGTAACAGGTAAGGATAACTACATGGAATTCTTCCGTTCTCGTAACATGTTGCCTTCTACTTCACCTCATCTTCTTTTAGAGAAAGACTTAGGTACTGCTGCTGCATTCTGGTTCTGGTCTAAGAATGGTATTAATGCTTATGCGGATAAAGGCGATATCGATGGATGCTGTGATAAAGTGAACATTGGTCACAAAACCACTCGTGTAGGTGATGCTCATGGTTTCACTGCTCGTAAAGCCATCTACGATAAACTGAGAGTATTCTTGAATCGTAATCCTGATCTACTGAAAGGTAAAGATGTACAAGTCATTCCTCAAGAAGTCATGAATGACGTGATTCCACCTGAGATTACTTTCTACGAACAAGATCCAGAATCTCGTGATCAAGTAGAGTTTGTACAGGATGTGAAGTTTATTTAATACCAAAACTATAAAAAGAGGTTAAATGGATAAAACCTTAAAACAGAAATTTGCGATTGTAGTACTGATTTATTTCTTTATGTTCATTGCATCCATGATCGTGAATGTGTTGACCATTACTTTCTCTCCTCTGATTGTTTGGTTCTCCATG
""")
